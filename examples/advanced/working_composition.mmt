// Working function composition edge cases

// Edge Case 1: Simple composition (works)
val inc : (x : number) => number = (x : number) => x + 1;
val double : (x : number) => number = (x : number) => x * 2;
val manual_compose : (x : number) => number = (x : number) => double(inc(x));
val test1 : number = manual_compose(5);

// Edge Case 2: Single argument higher-order functions (works)
val apply_to_five : (f : (x : number) => number) => number = 
  (f : (x : number) => number) => f(5);
val test2 : number = apply_to_five(inc);

// Edge Case 3: Function returning function (works)
val make_adder : (n : number) => (x : number) => number = 
  (n : number) => (x : number) => x + n;
val add5 : (x : number) => number = make_adder(5);
val test3 : number = add5(10);

// Edge Case 4: Chained single applications (works)
val chain : number = inc(double(add5(3)));